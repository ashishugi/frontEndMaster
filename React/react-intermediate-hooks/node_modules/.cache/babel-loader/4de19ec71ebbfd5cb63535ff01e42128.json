{"ast":null,"code":"import _slicedToArray from \"/Users/ashish/Desktop/fm/React/react-intermediate-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ashish/Desktop/fm/React/react-intermediate-hooks/src/Memo.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar fibonacci = function fibonacci(n) {\n  if (n <= 1) {\n    return 1;\n  }\n\n  return fibonacci(n - 1) + fibonacci(n - 2);\n};\n\nvar MemoComponent = function MemoComponent() {\n  _s();\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      num = _useState2[0],\n      setNum = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isGreen = _useState4[0],\n      setIsGreen = _useState4[1];\n\n  var fib = useMemo(function () {\n    return fibonacci(num);\n  }, [num]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: function onClick() {\n        return setIsGreen(!isGreen);\n      },\n      style: {\n        color: isGreen ? \"limegreen\" : \"crimson\"\n      },\n      children: \"useMemo Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Fibonacci of \", num, \" is \", fib]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setNum(num + 1);\n      },\n      children: \"\\u2795\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MemoComponent, \"JhH8fDg7PpeIcG7CBi5srn38TUs=\");\n\n_c = MemoComponent;\nexport default MemoComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoComponent\");","map":{"version":3,"sources":["/Users/ashish/Desktop/fm/React/react-intermediate-hooks/src/Memo.js"],"names":["useState","useMemo","fibonacci","n","MemoComponent","num","setNum","isGreen","setIsGreen","fib","color"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,CAAD,EAAO;AACvB,MAAIA,CAAC,IAAI,CAAT,EAAY;AACV,WAAO,CAAP;AACD;;AAED,SAAOD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,GAAmBD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAnC;AACD,CAND;;AAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B,kBAAsBJ,QAAQ,CAAC,CAAD,CAA9B;AAAA;AAAA,MAAOK,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAA8BN,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,GAAG,GAAGR,OAAO,CAAC;AAAA,WAAMC,SAAS,CAACG,GAAD,CAAf;AAAA,GAAD,EAAuB,CAACA,GAAD,CAAvB,CAAnB;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAE;AAAA,eAAMG,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,OADX;AAEE,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAEH,OAAO,GAAG,WAAH,GAAiB;AAAjC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAOE;AAAA,kCACgBF,GADhB,UACyBI,GADzB;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,eAUE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMH,MAAM,CAACD,GAAG,GAAG,CAAP,CAAZ;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAnBD;;GAAMD,a;;KAAAA,a;AAqBN,eAAeA,aAAf","sourcesContent":["import { useState, useMemo } from \"react\";\n\nconst fibonacci = (n) => {\n  if (n <= 1) {\n    return 1;\n  }\n\n  return fibonacci(n - 1) + fibonacci(n - 2);\n};\n\nconst MemoComponent = () => {\n  const [num, setNum] = useState(1);\n  const [isGreen, setIsGreen] = useState(true);\n  const fib = useMemo(() => fibonacci(num), [num]);\n\n  return (\n    <div>\n      <h1\n        onClick={() => setIsGreen(!isGreen)}\n        style={{ color: isGreen ? \"limegreen\" : \"crimson\" }}\n      >\n        useMemo Example\n      </h1>\n      <h2>\n        Fibonacci of {num} is {fib}\n      </h2>\n      <button onClick={() => setNum(num + 1)}>âž•</button>\n    </div>\n  );\n};\n\nexport default MemoComponent;\n"]},"metadata":{},"sourceType":"module"}