{"ast":null,"code":"import _slicedToArray from \"/Users/ashish/Desktop/fm/React/react-intermediate-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ashish/Desktop/fm/React/react-intermediate-hooks/src/ImperativeHandle.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useRef, useImperativeHandle, forwardRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ElaborateInput = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var hasError = _ref.hasError,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      update = _ref.update;\n  var inputRef = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: inputRef,\n    value: value,\n    onChange: function onChange(e) {\n      return update(e.target.value);\n    },\n    placeholder: placeholder,\n    style: {\n      padding: \"5px 15px\",\n      borderWidth: \"3px\",\n      borderStyle: \"solid\",\n      borderColor: hasError ? \"crimson\" : \"#999\",\n      borderRadius: \"5px\",\n      margin: \"0 10px\",\n      textAlign: \"center\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, _this);\n}, \"Ag7bjDUBywlCYPNfrolbitV68Mw=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = ElaborateInput;\n\nvar ImperativeHandleComponent = function ImperativeHandleComponent() {\n  _s2();\n\n  var _useState = useState(\"Seattle\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      city = _useState2[0],\n      setCity = _useState2[1];\n\n  var _useState3 = useState(\"WA\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var cityEl = useRef();\n  var stateEl = useRef();\n\n  function validate() {\n    // lol I found it on StackOverflow : https://stackoverflow.com/a/25677072\n    if (!/^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]+$/.test(city)) {\n      setError(\"city\");\n      cityEl.current.focus();\n      return;\n    }\n\n    if (!/^[A-Z]{2}$/.test(state)) {\n      setError(\"state\");\n      stateEl.current.focus();\n      return;\n    }\n\n    setError(\"\");\n    alert(\"valid form!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useImperativeHandle Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ElaborateInput, {\n      hasError: error === \"city\",\n      placeholder: \"City\",\n      value: city,\n      update: setCity,\n      ref: cityEl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ElaborateInput, {\n      hasError: error === \"state\",\n      placeholder: \"State\",\n      value: state,\n      update: setState,\n      ref: stateEl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validate,\n      children: \"Validate Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(ImperativeHandleComponent, \"OxPzLHIQXVt1epXtcck2NAaqqQk=\");\n\n_c3 = ImperativeHandleComponent;\nexport default ImperativeHandleComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ElaborateInput$forwardRef\");\n$RefreshReg$(_c2, \"ElaborateInput\");\n$RefreshReg$(_c3, \"ImperativeHandleComponent\");","map":{"version":3,"sources":["/Users/ashish/Desktop/fm/React/react-intermediate-hooks/src/ImperativeHandle.js"],"names":["useState","useRef","useImperativeHandle","forwardRef","ElaborateInput","ref","hasError","placeholder","value","update","inputRef","focus","current","e","target","padding","borderWidth","borderStyle","borderColor","borderRadius","margin","textAlign","ImperativeHandleComponent","city","setCity","state","setState","error","setError","cityEl","stateEl","validate","test","alert"],"mappings":"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","sourcesContent":["import { useState, useRef, useImperativeHandle, forwardRef } from \"react\";\n\nconst ElaborateInput = forwardRef(\n  ({ hasError, placeholder, value, update }, ref) => {\n    const inputRef = useRef();\n    useImperativeHandle(ref, () => {\n      return {\n        focus() {\n          inputRef.current.focus();\n        }\n      };\n    });\n    return (\n      <input\n        ref={inputRef}\n        value={value}\n        onChange={(e) => update(e.target.value)}\n        placeholder={placeholder}\n        style={{\n          padding: \"5px 15px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: hasError ? \"crimson\" : \"#999\",\n          borderRadius: \"5px\",\n          margin: \"0 10px\",\n          textAlign: \"center\"\n        }}\n      />\n    );\n  }\n);\n\nconst ImperativeHandleComponent = () => {\n  const [city, setCity] = useState(\"Seattle\");\n  const [state, setState] = useState(\"WA\");\n  const [error, setError] = useState(\"\");\n  const cityEl = useRef();\n  const stateEl = useRef();\n\n  function validate() {\n    // lol I found it on StackOverflow : https://stackoverflow.com/a/25677072\n    if (\n      !/^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Z\\u0080-\\u024F]+$/.test(\n        city\n      )\n    ) {\n      setError(\"city\");\n      cityEl.current.focus();\n      return;\n    }\n\n    if (!/^[A-Z]{2}$/.test(state)) {\n      setError(\"state\");\n      stateEl.current.focus();\n      return;\n    }\n\n    setError(\"\");\n    alert(\"valid form!\");\n  }\n\n  return (\n    <div>\n      <h1>useImperativeHandle Example</h1>\n      <ElaborateInput\n        hasError={error === \"city\"}\n        placeholder={\"City\"}\n        value={city}\n        update={setCity}\n        ref={cityEl}\n      />\n      <ElaborateInput\n        hasError={error === \"state\"}\n        placeholder={\"State\"}\n        value={state}\n        update={setState}\n        ref={stateEl}\n      />\n      <button onClick={validate}>Validate Form</button>\n    </div>\n  );\n};\n\nexport default ImperativeHandleComponent;\n"]},"metadata":{},"sourceType":"module"}